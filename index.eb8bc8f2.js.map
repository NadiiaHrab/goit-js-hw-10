{"mappings":"uDAAAA,EAAiBC,KAAKC,MAAM,uiBC2E5B,MAAMC,EAAKC,SAASC,cAAc,yBAM5BC,EAAaC,EAAAP,GAAKQ,OACxBC,QAAQC,IAAIJ,GAGZ,MAAMK,EAAKL,EAAWM,KAAIC,GACfA,EAAMC,OAKbL,QAAQC,IAAIC,GASFI,MAAM,uIACXC,MAAKC,GACNA,EAASC,SAERF,MAAKG,GAAQA,EAAKC,UARlBJ,MAWT,SAA4BK,GAExB,MAAMC,EAASD,EAAMT,KAAIW,GACd,oGACuDA,EAAKC,+JAE9DD,EAAKE,iBAAiBF,EAAKE,mBAAmBF,EAAKG,8CACtCH,EAAKE,mEAEHF,EAAKI,+CACLJ,EAAKK,mCAK1BC,KAAK,IAER1B,EAAG2B,mBAAmB,YAAaR,E,IA3B9BS,OAAOC,GAAUvB,QAAQC,IAAIsB","sources":["src/genres/genres.json","src/index.js"],"sourcesContent":["{\n  \"genres\": [\n    { \"id\": 28, \"name\": \"Action\" },\n    { \"id\": 12, \"name\": \"Adventure\" },\n    { \"id\": 16, \"name\": \"Animation\" },\n    { \"id\": 35, \"name\": \"Comedy\" },\n    { \"id\": 80, \"name\": \"Crime\" },\n    { \"id\": 99, \"name\": \"Documentary\" },\n    { \"id\": 18, \"name\": \"Drama\" },\n    { \"id\": 10751, \"name\": \"Family\" },\n    { \"id\": 14, \"name\": \"Fantasy\" },\n    { \"id\": 36, \"name\": \"History\" },\n    { \"id\": 27, \"name\": \"Horror\" },\n    { \"id\": 10402, \"name\": \"Music\" },\n    { \"id\": 9648, \"name\": \"Mystery\" },\n    { \"id\": 10749, \"name\": \"Romance\" },\n    { \"id\": 878, \"name\": \"Science Fiction\" },\n    { \"id\": 10770, \"name\": \"TV Movie\" },\n    { \"id\": 53, \"name\": \"Thriller\" },\n    { \"id\": 10752, \"name\": \"War\" },\n    { \"id\": 37, \"name\": \"Western\" }\n  ]\n}","// import './css/styles.css';\n// import debounce from 'lodash.debounce';\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// import API from './fetchCountries';\n// import { renderCountryList, renderCountryCard } from \"./render-function\";\n\n\n\n// const DEBOUNCE_DELAY = 300;\n\n// const inputSearch = document.querySelector('#search-box');\n// const listCountry = document.querySelector('.country-list');\n// const cardCountry = document.querySelector('.country-info');\n\n// inputSearch.addEventListener('input', debounce(onInputSearch, DEBOUNCE_DELAY));\n\n\n// function onInputSearch(e) {\n//     e.preventDefault();\n\n//     const query = inputSearch.value.trim();\n    \n    \n\n//     API.fetchCountries(query)\n//         .then(onfetchSearch)\n//         .catch(onfetchError); \n// };\n\n// function onfetchSearch(countries) {\n\n//      if (countries.length > 10) {\n                \n//                 Notify.info(\"Too many matches found. Please enter a more specific name.\");\n//                 onClearRender();\n\n//             } else if (countries.length >= 2 && countries.length <= 10) {\n\n//                 renderList(countries);\n//                 cardCountry.innerHTML = '';\n        \n//             } else if (countries.length === 1) {\n                \n//                 renderCard(countries);\n//                 listCountry.innerHTML = '';\n//     }\n// };\n\n\n// function renderList(countries) {\n//     const list = renderCountryList(countries);\n//     listCountry.insertAdjacentHTML('beforeend', list);\n// }\n\n// function renderCard(countries) {\n//     const card = renderCountryCard(countries);\n//     cardCountry.insertAdjacentHTML('beforeend', card);\n    \n// }\n\n// function onfetchError(error) {\n//     Notify.failure(\"Oops, there is no country with that name\");\n//     onClearRender();\n    \n// }\n\n// function onClearRender() {\n//     listCountry.innerHTML = '';\n//     cardCountry.innerHTML = '';\n// };\n\n\nimport json from './genres/genres.json';\n\n\nconst ul = document.querySelector('.trending__collection');\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRENDING = 'trending/movie/week';\nconst API_KEY = '1d8f1c2313e3ed4d118cc85bb96261b9';\n\nconst genresJson = json.genres;\nconsole.log(genresJson);\n\n\nconst el = genresJson.map(genre => {\n    return genre.name;\n    \n    \n\n})\n    console.log(el);\n\n\n\n    getFetchTrending()\n        .then(renderTrendingCard)\n        .catch((error) => console.log(error));\n\nfunction getFetchTrending() {\n       return fetch(`${BASE_URL}${TRENDING}?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`)\n        .then(response =>\n        response.json()\n        )\n        .then(data => data.results)\n}\n\nfunction renderTrendingCard(films) {\n\n    const cardEl = films.map(film => {\n        return `<li class=\"trending__item\">\n    <img class=\" card__img\" src=\"https://www.themoviedb.org/t/p/w500${film.poster_path}\"\n      onerror=\"this.onerror=null;this.src='https://subscribenow.com.au/time/asia/Solo/Content/Images/noCover.gif'\" loading=\"lazy\"\n      alt=\"${film.title}\" title=\"${film.title}\" data-id=\"${film.id}\" width=\"280\"/>\n<h3 class=\"card__title\">${film.title}</h3>\n<div class=\"card-field\">\n    <p class=\"text__vote\">${film.release_date}</p>\n    <p class=\"text__vote\">${film.genre_ids}</p>\n</div>\n\n</li>`\n        \n    }).join('');\n\n    ul.insertAdjacentHTML('beforeend', cardEl);\n\n\n    // return cardEl;\n};\n"],"names":["$9a83ffbb87ece37f$exports","JSON","parse","$1f0dc3b9307be026$var$ul","document","querySelector","$1f0dc3b9307be026$var$genresJson","$parcel$interopDefault","genres","console","log","$1f0dc3b9307be026$var$el","map","genre","name","fetch","then","response","json","data","results","films","cardEl","film","poster_path","title","id","release_date","genre_ids","join","insertAdjacentHTML","catch","error"],"version":3,"file":"index.eb8bc8f2.js.map"}